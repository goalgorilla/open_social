@import 'settings';

// Form elements
//
// All form elements are grouped in a class `.form-group`.
// There can be a label, required astrix, input field and help text.
//
// markup: form-element.twig
//
// Weight: 1
//
// Style guide: molecules.form-elements

// Inline Form errors
//
// _Added in release 1.6_
//
// For this feature the module __Inline Form Errors__ should be enabled.
//
// ### Alerts
// When a form is submitted the user receives an alert message with
// either a confirmation the form is submitted successfully or with the feedback
// that there is an error. The feedback will then contain a link to the inline form feedback.
//
// ### Inline feedback
// The form-group div will get a class `has-error` which can be used
// to style any form element (children). The feedback is placed in a small dismissable alert.
// All the other fields remain in there original form.
//
// markup: inline-form-error.twig
//
// Weight: 3
//
// Style guide: molecules.form-elements.inline-error

// Form element icons
//
// To add icons to a form element, you can add it inside the `<label>` element.
// The icon can be used to make labels and elements easily recognisable or categorise
// form elements. Wrap the icon in span with the class `control-label__icon` where you
// can add a background-image or inline SVG.
//
// markup: form-element-icon.twig
//
// Weight: 2
//
// Style guide: molecules.form-elements.icon

// Browsers do not recognize pseudo :after selectors, we must create a wrapper
// around the select element to style it properly.

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  margin-bottom: 5px;
}

.control-label {
  font-size: 0.875rem;
}

.control-label__icon--bg {
  display: inline-block;
  vertical-align: middle;
  width: 30px;
  height: 30px;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: 24px 24px;
}

.control-label__icon--svg {
  display: inline-block;
  vertical-align: middle;
  width: 30px;
  height: 30px;
  padding: 3px;
  fill: $default-color;
}

.control-label--above {
  display: block;
  margin-bottom: 3px;
}

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: $form-group-margin-bottom;
  position: relative;

  .radio,
  .checkbox {
    margin-bottom: 0;
  }

}

.form-group-inline {
  display: flex;
  flex-wrap: wrap;

  .form-group {
    margin-bottom: 0;
  }

  .form-item {
    flex: 1;
  }

  .btn {
    margin-left: 8px;
    margin-bottom: 5px;

    // Safari fix
    flex-shrink: 0;
  }

}

.form-group-inline--right {
  justify-content: flex-end;

  // This class identifies the primary button set by Drupal, is has nothing to do with the button style. We want this button to be positioned last.
  .button--primary {
    order: 10;
  }
}

.form-no-label label + .form-required {
  display: none;
}

// Nested checkboxes are indented to show that they belong together.
.form-group.checkboxes--nested {
  outline: red;

  & > .form-checkboxes,
  & > .form-group {
    margin-left: 25px;
    margin-bottom: .5em;
  }

  .checkboxes__label {
    margin-bottom: 0;
  }
}

// In the search filter they do not appear in a form-group.
.checkboxes--nested .checkboxes--nested__child + label {
  margin-left: 25px;
}

// Indication on labels for required fields
span.form-required {
  margin: 0 3px;
}

// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  display: block; // account for any element using help-block
  margin-top: 5px;
  font-size: 0.75rem;
  color: $help-block;

  .radio & {
    padding-left: $radio-width;
    max-width: none;
    margin-top: 0;
  }

}

.form-actions .btn {
  margin-bottom: 5px;
}

// Views exposed forms are placed next to views. An example is a filter block
// in overviews. We want to make sure the buttons in this forms have a consistent
// layout

.views-exposed-form__actions {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-bottom: 0;

  // The primary button will align right
  .btn-default {
    order: 10;
  }

  // the flat button (reset button) will align left
  .btn-flat {
    margin-left: 0;
  }
}

// For forms that cover the whole page, we can assume the primary button should align right
.form--default .form-actions {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .btn-group--primary,
  .btn-primary {
    margin-left: auto;
    margin-right: 0;
    order: 10;
  }
}

// Inline Form Errors

.form-item--error-message {
  margin-top: 10px;
  position: relative;
  font-size: 0.75rem;
  display: inline-block;
  margin-bottom: 5px;
  padding-right: 3 * $alert-padding-x-sm;

  .close {
    float: none;
    position: absolute;
    right: 0;
    top: 0;
    line-height: 16px;
    padding: $alert-padding-y-sm $alert-padding-x-sm;
  }

  &::before {
    display: inline-block;
    content: '';
    position: absolute;
    left: 20px;
    top: -7px;
    border-bottom: 8px dashed;
    border-right: 8px solid transparent;
    border-left: 8px solid transparent;
  }
}

.fieldset-wrapper .form-item--error-message {
  margin-top: 0;
}

.form-inline {
  @include for-tablet-portrait-up {
    // Inline-block all the things for "inline"
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
    }

    // In navbar-form, allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

  }

  .has-error & {
    margin-bottom: 0;
  }
}

.field--label-inline {
  .field--label {
    font-weight: 500;
    display: inline-block;
    &:after {
      content: ':';
    }
    & + .field--item {
      display: inline-block;
      a {
        font-weight: 300;
      }
    }
  }
}

// Styles for the location block on the event/group/profile edit pages
.field--type-address {

  .node-event-form &,
  .node-event-edit-form &,
  .profile-form &,
  .group-form & {

    .panel {
      .panel-heading {
        margin-bottom: .5rem;
        font-size: .875rem;
      }

      [id*='address-ajax-wrapper'] {
        max-width: 500px;
        padding: 1.25rem 1.25rem .25rem;
        background: #f3f3f3;
        border-radius: 5px !important;

        label {
          margin-bottom: .5rem;
        }
      }
    }
  }
}
