<?php

/**
 * @file
 * The primary PHP file for the Social base theme.
 */

use Drupal\Component\Utility\Html as HtmlUtility;
use Drupal\bootstrap\Bootstrap;

// Include all files from the includes directory.
$includes_path = dirname(__FILE__) . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/' . basename($filename);
}

/**
 * Implements hook_theme_suggestions_alter().
 * @param $data
 * @param null $context1
 * @param null $context2
 */
function socialbase_theme_suggestions_alter(&$data, &$context1 = NULL, &$context2 = NULL) {
  Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);
}

/**
 * Implements template_preprocess_book_navigation().
 * @param $variables
 */
function socialbase_preprocess_book_navigation(&$variables) {
  $variables['tree'] = ''; // Disables the menu tree below the content on a book node in full display mode.
}

/**
 * Prepare group link when an event or topic belongs to one group.
 * @param $node
 * @return null
 */
function socialbase_group_link($node) {
  $group_link = NULL;

  //Exclude nodes without ids (Preview)
  if (!empty($node->id())) {
    $group_content = \Drupal::entityTypeManager()
      ->getStorage('group_content')
      ->loadByProperties([
        'entity_id' => $node->id(),
        //@TODO: fix this to work with all group types.
        'type' => 'open_group-group_node-' . $node->getType(),
      ]);
    if (!empty($group_content)) {
      $group = reset($group_content)->getGroup();
      $group_link = $group->link();
    }
  }
  return $group_link;
}


/**
 * Helper function to retrieve the icon string for a visibility title.
 *
 * @param string $title
 *   The title for the icon.
 *
 * @return string $icon
 *   The icon connected to the title.
 */
function _socialbase_get_visibility_icon($title) {
  // Set the materialize icon.
  switch ($title) {
    case 'Community':
      $icon = 'community';
      break;

    case 'Recipient':
      $icon = 'community';
      break;

    default:
      $icon = strtolower(HtmlUtility::escape($title));
  }

  return $icon;
}

/**
 * Implements hook_js_alter().
 */
function socialbase_js_alter(&$javascript, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  if (isset($javascript['modules/contrib/image_widget_crop/js/imageWidgetCrop.js'])) {
    $javascript['modules/contrib/image_widget_crop/js/imageWidgetCrop.js']['data'] = drupal_get_path('theme', 'socialbase') . '/assets/js/imageWidgetCrop.min.js';
  }

  if (isset($javascript['themes/contrib/bootstrap/js/misc/vertical-tabs.js'])) {
    $javascript['themes/contrib/bootstrap/js/misc/vertical-tabs.js']['weight']--;
  }

}

/**
 * Implements theme_preprocess_username().
 * @param $variables
 */
function socialbase_preprocess_username(&$variables) {
  $account = $variables['account'] ?: new AnonymousUserSession();

  // Override the default drupal truncate function for all user names, so the whole name will be displayed.
  $variables['name'] = $account->getDisplayName();
}

