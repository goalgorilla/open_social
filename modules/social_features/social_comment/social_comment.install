<?php

/**
 * @file
 * Install, update and uninstall functions for the social_comment module.
 */

use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_comment.
 */
function social_comment_install() {

  // Set some default permissions.
  _social_comment_set_permissions();
}

/**
 * Function to set permissions.
 */
function _social_comment_set_permissions() {
  $roles = Role::loadMultiple();

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    if ($role->id() === 'administrator') {
      continue;
    }

    $permissions = _social_comment_get_permissions($role->id());
    user_role_grant_permissions($role->id(), $permissions);
  }
}

/**
 * Build the permissions.
 *
 * @param string $role
 *    The role.
 *
 * @return array
 *    Returns an array containing the permissions.
 */
function _social_comment_get_permissions($role) {
  // Anonymous.
  $permissions['anonymous'] = array();

  // Authenticated.
  $permissions['authenticated'] = array_merge($permissions['anonymous'], array(
    'access comments',
    'post comments',
    'skip comment approval',
    'edit own comments',
    'delete own comments',
    'administer own comments',
  ));

  // Content manager.
  $permissions['contentmanager'] = array_merge($permissions['authenticated'], array());

  // Site manager.
  $permissions['sitemanager'] = array_merge($permissions['contentmanager'], array());

  if (isset($permissions[$role])) {
    return $permissions[$role];
  }
  return [];
}

/**
 * Enable 'administer own comments' permission for authenticated users.
 */
function social_comment_update_8001(&$sandbox) {
  $roles = Role::loadMultiple();

  $permissions = array(
    'administer own comments',
  );

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    if ($role->id() === 'authenticated') {
      user_role_grant_permissions($role->id(), $permissions);
    }
  }
}
