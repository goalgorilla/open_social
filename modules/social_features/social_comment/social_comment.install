<?php

/**
 * @file
 * Install, update and uninstall functions for the social_comment module.
 */

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_comment.
 */
function social_comment_install() {
  // Grant the default permissions for this feature.
  user_role_grant_permissions('anonymous', ['access comments']);
  user_role_grant_permissions('authenticated', ['access comments']);
  user_role_grant_permissions(
    'verified',
    [
      'access comments',
      'post comments',
      'skip comment approval',
      'edit own comments',
      'delete own comments',
      'administer own comments',
    ]
  );
  user_role_grant_permissions(
    'contentmanager',
    [
      'access comments',
      'post comments',
      'skip comment approval',
      'edit own comments',
      'delete own comments',
      'administer own comments',
      'administer comments',
    ]
  );
  user_role_grant_permissions(
    'sitemanager',
    [
      'access comments',
      'post comments',
      'skip comment approval',
      'edit own comments',
      'delete own comments',
      'administer own comments',
      'administer comments',
    ]
  );

  // Set the view mode to use when shown in activities.
  activity_creator_set_entity_view_mode('comment', 'activity');
}

/**
 * Implements hook_update_last_removed().
 */
function social_comment_update_last_removed() : int {
  return 11202;
}

/**
 * Add profile's First Name and Last Name in combined filter to view Comments.
 *
 * Change search operator.
 */
function social_comment_update_12201(): string {
  /** @var \Drupal\update_helper\Updater $updater */
  $updater = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updater->executeUpdate('social_comment', __FUNCTION__);

  // Output logged messages to related channel of update execution.
  return $updater->logger()->output();
}

/**
 * Update comment views config to use a correct table.
 */
function social_comment_update_13000() : string {
  /** @var \Drupal\update_helper\Updater $updater */
  $updater = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updater->executeUpdate('social_comment', __FUNCTION__);

  // Output logged messages to related channel of update execution.
  return $updater->logger()->output();
}
