<?php

/**
 * @file
 * Install, update and uninstall functions for the social_embed module.
 */

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_embed.
 */
function social_embed_install(bool $is_syncing) {
  // Grant the default permissions for this feature.
  user_role_grant_permissions(
    'anonymous',
    [
      'generate social embed content',
    ]
  );
  user_role_grant_permissions(
    'authenticated',
    [
      'generate social embed content',
    ]
  );
  user_role_grant_permissions(
    'sitemanager',
    [
      'administer social embed settings',
    ]
  );

  if (!$is_syncing) {
    // Add new field 'field_user_embed_content_consent' to user edit form.
    // This enables the user to toggle the option for embedded content settings.
    $form_display = \Drupal::service('entity_display.repository')->getFormDisplay('user', 'user');
    $form_display = $form_display->setComponent('field_user_embed_content_consent', [
      'label' => 'above',
      'type' => 'boolean_checkbox',
    ]);
    $form_display->save();

    // Add new field_group 'group_remote_content_settings' to user edit form.
    // And add the newly installed field 'field_user_embed_content_consent'
    // as its children.
    $form_display = \Drupal::service('entity_display.repository')->getFormDisplay('user', 'user');
    if (!empty($form_display->getComponent('field_user_embed_content_consent'))) {
      $new_group = (object) [
        'group_name' => 'group_remote_content_settings',
        'entity_type' => 'user',
        'bundle' => 'user',
        'mode' => 'default',
        'context' => 'form',
        'children' => [
          0 => 'field_user_embed_content_consent',
        ],
        'parent_name' => '',
        'weight' => 20,
        'format_type' => 'fieldset',
        'region' => 'hidden',
        'format_settings' => [
          'show_empty_fields' => 0,
          'id' => '',
          'classes' => '',
          'description' => '',
          'required_fields' => 1,
        ],
        'label' => t('Remote content settings'),
      ];

      field_group_group_save($new_group);
    }
  }

  // Add the embed button to the toolbar.
  $config_factory = \Drupal::configFactory();
  $text_formats = [
    'editor.editor.full_html',
    'editor.editor.basic_html',
  ];

  // Make sure our url_embed is installed, so we can add it to the toolbar.
  \Drupal::service('module_installer')->install(['url_embed']);

  foreach ($text_formats as $text_format) {
    $configuration = $config_factory->getEditable($text_format);
    $toolbar_items = $configuration->getOriginal('settings.toolbar.items');

    // Only add the embed button when it is not on the toolbar yet.
    if (!empty($toolbar_items) && !in_array('urlembed', $toolbar_items, TRUE)) {
      $toolbar_items[] = 'urlembed';
      $configuration->set('settings.toolbar.items', $toolbar_items);
      $configuration->save();
    }
  }
}

/**
 * Implements hook_uninstall().
 *
 * Remove embed button from the toolbar.
 */
function social_embed_uninstall() :void {
  $config_factory = \Drupal::configFactory();
  $text_formats = [
    'editor.editor.full_html',
    'editor.editor.basic_html',
  ];

  foreach ($text_formats as $text_format) {
    $configuration = $config_factory->getEditable($text_format);
    $toolbar_items = $configuration->getOriginal('settings.toolbar.items');

    // Only remove the embed button when it can be found on the toolbar.
    if (!empty($toolbar_items) && $key = array_search('urlembed', $toolbar_items, TRUE)) {
      unset($toolbar_items[$key]);
      $configuration->set('settings.toolbar.items', $toolbar_items);
      $configuration->save();
    }
  }
}

/**
 * Implements hook_update_last_removed().
 */
function social_embed_update_last_removed() : int {
  return 11005;
}
