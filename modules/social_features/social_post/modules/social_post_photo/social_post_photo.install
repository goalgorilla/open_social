<?php

/**
 * @file
 * The Social post photo installation.
 */

/**
 * Install hook for Social Post Photo.
 */
function social_post_photo_install() {
  // Grant the default permissions for this feature.
  user_role_grant_permissions(
    'verified',
    [
      'add photo post entities',
    ]
  );
  user_role_grant_permissions(
    'contentmanager',
    [
      'add photo post entities',
    ]
  );
  user_role_grant_permissions(
    'sitemanager',
    [
      'add photo post entities',
    ]
  );

  // Change post to photo.
  _social_post_photo_settype('post', 'photo');
}

/**
 * Uninstall hook for Social Post Photo.
 */
function social_post_photo_uninstall() {

  // Change photo to post.
  _social_post_photo_settype('photo', 'post');

  $configs = [
    'core.entity_form_display.post.photo.default',
    'core.entity_form_display.post.photo.group',
    'core.entity_form_display.post.photo.profile',
    'core.entity_view_display.post.photo.activity',
    'core.entity_view_display.post.photo.activity_comment',
    'core.entity_view_display.post.photo.default',
    'field.field.post.photo.field_post',
    'field.field.post.photo.field_post_comments',
    'field.field.post.photo.field_post_image',
    'field.field.post.photo.field_recipient_group',
    'field.field.post.photo.field_recipient_user',
    'field.field.post.photo.field_visibility',
    'field.storage.post.field_post_image',
    'image.style.social_post_photo',
    'social_post.post_type.photo',
  ];

  foreach ($configs as $config) {
    // Deleting config.
    \Drupal::configFactory()->getEditable($config)->delete();
  }
}

/**
 * Implements hook_update_last_removed().
 */
function social_post_photo_update_last_removed() : int {
  return 10201;
}

/**
 * Remove the field_album from entity view display.
 */
function social_post_photo_update_12001(): string {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('social_post_photo', __FUNCTION__);

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}
