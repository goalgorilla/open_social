<?php

/**
 * @file
 * The Social post album module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\social_post\Entity\PostInterface;

/**
 * Implements hook_theme().
 */
function social_post_album_theme($existing, $type, $theme, $path) {
  return [
    'album_post_popup' => [
      'variables' => [
        'urls' => NULL,
        'pid' => NULL,
      ],
    ],
    'field__post__type__image__album' => [
      'base hook' => 'field',
      'render element' => 'element',
    ],
    'image_widget__album' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Implements hook_preprocess_field().
 */
function social_post_album_preprocess_field__post__type__image__album(&$variables) {
  $post = $variables['element']['#object'];

  if ($post instanceof PostInterface) {
    $variables['pid'] = $post->id();

    $all_post_fids = \Drupal::database()
      ->select('post__field_post_image', 'fpi')
      ->fields('fpi', ['field_post_image_target_id'])
      ->condition('entity_id', $post->id())
      ->countQuery()
      ->execute()
      ->fetchField();

    $visible_fids_count = $post->field_post_image->count();
    $variables['more_posts_count'] = $all_post_fids - $visible_fids_count;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_post_album_preprocess_album_post_popup(&$variables) {
  $variables['post'] = [
    '#lazy_builder' => [
      'social_post_album.lazy_renderer:getPost',
      [
        'post',
        $variables['pid'],
        'album',
      ],
    ],
    '#create_placeholder' => TRUE,
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_post_album_preprocess_activity(&$variables, $hook) {
  $variables['extra_stream_class'] = 'social-post-album--post';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_post_album_preprocess_post__activity(&$variables, $hook) {
  $variables['post_image_without_wrapper'] = TRUE;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_post_album_preprocess_block__social_post(&$variables, $hook) {
  $variables['extra_stream_class'] = 'social-post-album--form';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function social_post_album_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  $element = $variables['element'];

  if ($element['#field_name'] === 'field_post_image') {
    $suggestions[] = 'field__' . $element['#entity_type'] . '__type__' . $element['#field_type'] . '__album';
  }

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function social_post_album_theme_suggestions_image_widget_alter(array &$suggestions, array $variables) {
  $element = $variables['element'];
  $route_name = \Drupal::routeMatch()->getRouteName();

  if ($element['#field_name'] === 'field_post_image' && $route_name !== 'entity.post.edit_form') {
    $suggestions[] = 'image_widget__album';
  }

  return $suggestions;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_post_album_form_social_post_entity_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['#attached']['library'][] = 'social_post_album/social-post-album--form';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_post_album_preprocess_image_formatter(&$variables) {
  if ($variables['image_style'] === 'social_post_photo') {
    $variables['image']['#style_name'] = 'social_x_large';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_post_album_form_comment_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['submit']['#submit'][] = 'social_post_album_comment_redirect';
}

/**
 * Submit callback for the user comment form to redirect without ajax module.
 */
function social_post_album_comment_redirect($form, FormStateInterface $form_state) {
  /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
  $module_handler = \Drupal::service('module_handler');

  if (!$module_handler->moduleExists('social_ajax_comments') || !$module_handler->moduleExists('ajax_comments')) {
    $redirect_after_save = \Drupal::request()->request->get('redirect_after_save');
    if (strpos($redirect_after_save, '/open/images/') !== FALSE) {
      /** @var \Drupal\comment\CommentInterface $comment */
      $comment = $form_state->getFormObject()->getEntity();
      /** @var \Drupal\social_post\Entity\PostInterface $post */
      $post = $comment->getCommentedEntity();

      $form_state->setRedirect('entity.post.canonical', ['post' => $post->id()], ['fragment' => 'comment-' . $comment->id()]);
    }
  }
}
