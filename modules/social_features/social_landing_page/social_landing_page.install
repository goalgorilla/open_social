<?php

/**
 * @file
 * Install, update and uninstall functions for the social_landing_page module.
 */

use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_landing_page.
 */
function social_landing_page_install() {
  // Grant the default permissions for this feature.
  user_role_grant_permissions(
    RoleInterface::ANONYMOUS_ID,
    [
      'view node.landing_page.field_content_visibility:public content',
    ]
  );
  user_role_grant_permissions(
    RoleInterface::AUTHENTICATED_ID,
    [
      'view node.landing_page.field_content_visibility:public content',
    ]
  );
  user_role_grant_permissions(
    'verified',
    [
      'view node.landing_page.field_content_visibility:community content',
    ]
  );
  user_role_grant_permissions(
    'contentmanager',
    [
      'view node.landing_page.field_content_visibility:community content',
      'create landing_page content',
      'delete any landing_page content',
      'delete own landing_page content',
      'edit any landing_page content',
      'edit own landing_page content',
      'view landing_page revisions',
      'delete landing_page revisions',
      'revert landing_page revisions',
      'override landing_page authored by option',
      'override landing_page published option',
      'override landing_page authored on option',
      'override landing_page revision option',
      'override landing_page sticky option',
      'view node.landing_page.field_content_visibility:group content',
    ]
  );
  user_role_grant_permissions(
    'sitemanager',
    [
      'view node.landing_page.field_content_visibility:community content',
      'create landing_page content',
      'delete any landing_page content',
      'delete own landing_page content',
      'edit any landing_page content',
      'edit own landing_page content',
      'view landing_page revisions',
      'delete landing_page revisions',
      'revert landing_page revisions',
      'override landing_page authored by option',
      'override landing_page published option',
      'override landing_page authored on option',
      'override landing_page revision option',
      'override landing_page sticky option',
      'view node.landing_page.field_content_visibility:group content',
    ]
  );
}

/**
 * Implements hook_update_dependencies().
 */
function social_landing_page_update_dependencies() : array {
  // Ensure configurations updates runs after the group migration has completed,
  // but before the group types are removed.
  $dependencies['social_landing_page'][130000] = [
    'social_group' => 13000,
  ];
  $dependencies['social_group'][13001] = [
    'social_landing_page' => 130000,
  ];

  return $dependencies;
}

/**
 * Implements hook_update_last_removed().
 */
function social_landing_page_update_last_removed() : int {
  return 111102;
}

/**
 * Remove deprecated group types.
 */
function social_landing_page_update_130000(): ?string {
  // Allow platforms to opt out of the group migration, for example if they want
  // to build it themselves and take more scenario's into account than common
  // Open Social installations will have.
  if (\Drupal::state()->get('social_group_group_type_migration_opt_out', FALSE)) {
    \Drupal::logger('social_group')->info('Platform has opted out of group migration.');
    return NULL;
  }

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('social_landing_page', __FUNCTION__);

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}
