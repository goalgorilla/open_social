<?php

/**
 * @file
 * Install/Uninstall/Update hooks for social_group_request module.
 */

/**
 * Implements hook_install().
 */
function social_group_request_install(): void {
  // Set some default permissions.
  _social_group_request_set_permissions();

  module_set_weight('social_group_request', 6);
}

/**
 * Implements hook_update_dependencies().
 */
function social_group_request_update_dependencies(): array {
  // Ensure configurations updates runs after the group migration has completed.
  $dependencies['social_group_request'][13000] = [
    'social_group' => 13000,
  ];

  $dependencies['social_group'][13001] = [
    'social_group_request' => 13000,
  ];

  $dependencies['social_group_request'][13001] = [
    'group' => 9208,
  ];

  return $dependencies;
}

/**
 * Assign group request permission for closed and flexible group types.
 */
function _social_group_request_set_permissions(): void {
  if (\Drupal::moduleHandler()->moduleExists('social_group_flexible_group')) {
    /** @var \Drupal\group\Entity\GroupRoleInterface $verified */
    $verified = \Drupal::entityTypeManager()
      ->getStorage('group_role')
      ->load('flexible_group-verified');
    $verified->grantPermission('request group membership')->save();

    /** @var \Drupal\group\Entity\GroupRoleInterface $group_manager */
    $group_manager = \Drupal::entityTypeManager()
      ->getStorage('group_role')
      ->load('flexible_group-group_manager');
    // Group managers should be able to manage membership requests.
    $group_manager->grantPermissions([
      'administer membership requests',
      'view group_membership_request relationship',
    ])->save();
  }
}

/**
 * Implements hook_update_last_removed().
 */
function social_group_request_update_last_removed(): int {
  return 10301;
}

/**
 * Remove deprecated group types.
 */
function social_group_request_update_13000(): ?string {
  // Allow platforms to opt out of the group migration, for example if they want
  // to build it themselves and take more scenario's into account than common
  // Open Social installations will have.
  if (\Drupal::state()->get('social_group_group_type_migration_opt_out', FALSE)) {
    \Drupal::logger('social_group')->info('Platform has opted out of group migration.');
    return NULL;
  }

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');
  $updateHelper->executeUpdate('social_group_request', __FUNCTION__);
  return $updateHelper->logger()->output();
}

/**
 * Group managers should be able to manage group memberships.
 */
function social_group_request_update_13001(): void {
  /** @var \Drupal\group\Entity\GroupRoleInterface $group_manager */
  $group_manager = \Drupal::entityTypeManager()
    ->getStorage('group_role')
    ->load('flexible_group-group_manager');
  // Group managers should be able to manage membership requests.
  $group_manager->grantPermission('view group_membership_request relationship')->save();
}

/**
 * Add new group permissions to group-manager role.
 */
function social_group_request_update_13002(): void {
  /** @var \Drupal\group\Entity\GroupRoleInterface $group_manager */
  $group_manager = \Drupal::entityTypeManager()
    ->getStorage('group_role')
    ->load('flexible_group-group_manager');
  $group_manager->grantPermission('administer membership requests')->save();
}
