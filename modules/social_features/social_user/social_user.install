<?php

/**
 * @file
 * Install, update and uninstall functions for the social_user module.
 */

use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_user.
 */
function social_user_install() {
  // Grant the default permissions for this feature.
  user_role_grant_permissions(
    RoleInterface::AUTHENTICATED_ID,
    [
      'cancel account',
      'change own username',
    ]
  );
  user_role_grant_permissions(
    'verified',
    [
      'access user profiles',
    ]
  );
  user_role_grant_permissions(
    'contentmanager',
    [
      'access user profiles',
    ]
  );
  user_role_grant_permissions(
    'sitemanager',
    [
      'access user profiles',
      'view users',
      'block users',
      'administer navigation settings',
      'administer social_user settings',
      'assign contentmanager role',
      'assign sitemanager role',
      'assign verified role',
      'view blocked user',
    ]
  );
}

/**
 * Implements hook_update_last_removed().
 */
function social_user_update_last_removed() : int {
  return 11402;
}

/**
 * Update 'views.view.user_admin_people'.
 *
 * Replace the login filter to last access and change label of access field.
 */
function social_user_update_12001(array &$sandbox): void {
  $config = \Drupal::configFactory()
    ->getEditable('views.view.user_admin_people');

  $data = $config->getRawData();

  // Replace the login filter to last access.
  if (isset($data['display']['default']['display_options']['filters']['login'])) {
    $filters = $data['display']['default']['display_options']['filters'];
    $filters['login']['id'] = 'access';
    $filters['login']['field'] = 'access';
    $filters['login']['entity_field'] = 'access';

    if (isset($filters['login']['expose'])) {
      $filters['login']['expose']['operator_id'] = 'access_op';
      $filters['login']['expose']['label'] = 'Last activity';
      $filters['login']['expose']['operator'] = 'access_op';
      $filters['login']['expose']['identifier'] = 'access';
    }

    // Replace key 'login' to 'access'.
    $keys = array_keys($filters);
    $keys[array_search('login', $keys)] = 'access';
    $filters_updated = array_combine($keys, $filters);

    // Set updated filters.
    $data['display']['default']['display_options']['filters'] = $filters_updated;
  }

  // Change label of access field.
  if (isset($data['display']['default']['display_options']['fields']['access'])) {
    $data['display']['default']['display_options']['fields']['access']['label'] = 'Last activity';
  }

  $config->setData($data)->save(TRUE);
}

/**
 * Enable views_ef_fieldset module and reorganize filters in admin/people page.
 */
function social_user_update_12002(array &$sandbox): string {
  // Enable views_ef_fieldset module.
  \Drupal::service('module_installer')->install(['views_ef_fieldset'], TRUE);

  /** @var \Drupal\update_helper\UpdaterInterface $update_helper */
  $update_helper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $update_helper->executeUpdate('social_user', __FUNCTION__);

  // Output logged messages to related channel of update execution.
  return $update_helper->logger()->output();
}
