<?php

/**
 * @file
 * Drupal hook implementations for the Social Search Autocomplete module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_search_autocomplete_form_search_content_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // We require a search input field.
  if (isset($form['search_input_content'])) {
    // Ensure the search input field has a unique id to target in js.
    if (empty($form['search_input_content']['#id'])) {
      $form['search_input_content']['#id'] = Html::getUniqueId('search_input_content');
    }

    $search_api_url = Url::fromRoute('view.search_all_autocomplete.rest_export_1', ['keys' => '%keys'])->toString();
    // Replace our escaped argument so it's not bothering our script.
    $search_api_url = str_replace('/%25keys', '', $search_api_url);

    $form['search_suggestions'] = [
      '#type' => 'html_tag',
      '#tag' => 'div',
      '#attributes' => [
        'class' => ['social-search-suggestions'],
        'data-search-suggestions-for' => $form['search_input_content']['#id'],
      ],
      '#weight' => '20',
      '#attached' => [
        'library' => ['social_search_autocomplete/search_autocomplete'],
        'drupalSettings' => [
          'socialSearchAutocomplete' => [
            // Use fromUserInput here because an installation in a subfolder may
            // return '/subfolder/' instead of '/'.
            // Use rtrim . '/' to ensure a trailing slash.
            'basePath' => rtrim(Url::fromUserInput('/')->toString(), '/') . '/',
            'searchPath' => Url::fromRoute('view.search_all.page_no_value')->toString(),
            'searchApiUrl' => $search_api_url,
          ],
        ],
      ],
    ];

    $form['#attributes']['class'][] = 'search--with-suggestions';
  }
}
