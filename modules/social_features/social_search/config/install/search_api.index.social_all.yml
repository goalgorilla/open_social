langcode: en
status: true
dependencies:
  config:
    - field.storage.group.field_group_description
    - field.storage.group.field_group_location
    - field.storage.profile.field_profile_expertise
    - field.storage.profile.field_profile_first_name
    - field.storage.profile.field_profile_interests
    - field.storage.profile.field_profile_last_name
    - field.storage.profile.field_profile_profile_tag
    - field.storage.node.field_event_date
    - field.storage.node.field_event_date_end
    - search_api.server.social_database
  module:
    - profile
    - user
    - node
    - group
    - taxonomy
    - search_api
    - entity_access_by_field
    - social_search
id: social_all
name: 'Community Search'
description: 'Contains all searchable community data for the platform (e.g. nodes, groups, and users).'
read_only: false
field_settings:
  event_date_end:
    label: End
    datasource_id: 'entity:node'
    property_path: field_event_date_end
    type: date
    dependencies:
      config:
        - field.storage.node.field_event_date_end
  event_date_start:
    label: Start
    datasource_id: 'entity:node'
    property_path: field_event_date
    type: date
    dependencies:
      config:
        - field.storage.node.field_event_date
  group_created:
    label: 'Created on'
    datasource_id: 'entity:group'
    property_path: created
    type: date
    dependencies:
      module:
        - group
  group_creator_name:
    label: 'Group creator » User » Name'
    datasource_id: 'entity:group'
    property_path: 'uid:entity:name'
    type: string
    dependencies:
      module:
        - group
        - user
  group_description:
    label: Description
    datasource_id: 'entity:group'
    property_path: field_group_description
    type: text
    dependencies:
      config:
        - field.storage.group.field_group_description
  group_location_name:
    label: 'Location name'
    datasource_id: 'entity:group'
    property_path: field_group_location
    type: string
    dependencies:
      config:
        - field.storage.group.field_group_location
  group_owner_id:
    label: 'Group creator'
    datasource_id: 'entity:group'
    property_path: uid
    type: integer
    dependencies:
      module:
        - group
  group_title:
    label: Title
    datasource_id: 'entity:group'
    property_path: label
    type: text
    boost: !!float 21
    dependencies:
      module:
        - group
  group_type:
    label: Type
    datasource_id: 'entity:group'
    property_path: type
    type: string
    dependencies:
      module:
        - group
  language_with_fallback:
    label: 'Language (with fallback)'
    property_path: language_with_fallback
    type: string
  node_created:
    label: 'Authored on'
    datasource_id: 'entity:node'
    property_path: created
    type: date
    dependencies:
      module:
        - node
  node_description:
    label: 'Description'
    datasource_id: 'entity:node'
    property_path: body
    type: text
    dependencies:
      config:
        - field.storage.node.body
  node_grants:
    label: 'Node access information'
    property_path: search_api_node_grants
    type: string
    indexed_locked: true
    type_locked: true
    hidden: true
  node_owner_id:
    label: 'Authored by'
    datasource_id: 'entity:node'
    property_path: uid
    type: integer
    indexed_locked: true
    type_locked: true
    dependencies:
      module:
        - node
  node_status:
    label: 'Publishing status'
    datasource_id: 'entity:node'
    property_path: status
    type: boolean
    indexed_locked: true
    type_locked: true
    dependencies:
      module:
        - node
  node_title:
    label: Title
    datasource_id: 'entity:node'
    property_path: title
    type: text
    boost: !!float 21
    dependencies:
      module:
        - node
  node_type:
    label: 'Content type'
    datasource_id: 'entity:node'
    property_path: type
    type: text
    boost: !!float 13
    dependencies:
      module:
        - node
  profile_expertise_id:
    label: Expertise
    datasource_id: 'entity:profile'
    property_path: field_profile_expertise
    type: integer
    dependencies:
      config:
        - field.storage.profile.field_profile_expertise
  profile_expertise_name:
    label: 'Expertise » Taxonomy term » Name'
    datasource_id: 'entity:profile'
    property_path: 'field_profile_expertise:entity:name'
    type: text
    dependencies:
      config:
        - field.storage.profile.field_profile_expertise
      module:
        - taxonomy
  profile_first_name:
    label: 'First name'
    datasource_id: 'entity:profile'
    property_path: field_profile_first_name
    type: text
    boost: !!float 2
    dependencies:
      config:
        - field.storage.profile.field_profile_first_name
  profile_interests_id:
    label: Interests
    datasource_id: 'entity:profile'
    property_path: field_profile_interests
    type: integer
    dependencies:
      config:
        - field.storage.profile.field_profile_interests
  profile_interests_name:
    label: 'Interests » Taxonomy term » Name'
    datasource_id: 'entity:profile'
    property_path: 'field_profile_interests:entity:name'
    type: text
    dependencies:
      config:
        - field.storage.profile.field_profile_interests
      module:
        - taxonomy
  profile_last_name:
    label: 'Last name'
    datasource_id: 'entity:profile'
    property_path: field_profile_last_name
    type: text
    boost: !!float 2
    dependencies:
      config:
        - field.storage.profile.field_profile_last_name
  profile_owner_created:
    label: 'Owner » User » Created'
    datasource_id: 'entity:profile'
    property_path: 'uid:entity:created'
    type: date
    dependencies:
      module:
        - profile
        - user
  profile_owner_id:
    label: Owner
    datasource_id: 'entity:profile'
    property_path: uid
    type: integer
    dependencies:
      module:
        - profile
  profile_owner_name:
    label: 'Owner » User » Name'
    datasource_id: 'entity:profile'
    property_path: 'uid:entity:name'
    type: text
    boost: !!float 2
    dependencies:
      module:
        - profile
        - user
  profile_profile_tag:
    label: 'Profile tag'
    datasource_id: 'entity:profile'
    property_path: field_profile_profile_tag
    type: integer
    dependencies:
      config:
        - field.storage.profile.field_profile_profile_tag
  profile_type:
    label: Profile Type
    datasource_id: 'entity:profile'
    property_path: type
    type: string
    dependencies:
      module:
        - profile
  user_status:
    label: 'Owner » User » User status'
    datasource_id: 'entity:profile'
    property_path: 'uid:entity:status'
    type: boolean
    dependencies:
      module:
        - profile
        - user
datasource_settings:
  'entity:group':
    bundles:
      default: true
      selected: {  }
    languages:
      default: true
      selected: {  }
  'entity:node':
    bundles:
      default: true
      selected: {  }
    languages:
      default: true
      selected: {  }
  'entity:profile':
    bundles:
      default: true
      selected: {  }
processor_settings:
  add_url: {  }
  aggregated_field: {  }
  auto_aggregated_fulltext_field: {  }
  blocked_users:
    weights:
      preprocess_query: -30
  content_access:
    weights:
      preprocess_query: -30
  entity_access_by_field:
    weights:
      preprocess_query: -30
  entity_type: {  }
  html_filter:
    weights:
      preprocess_index: -25
      preprocess_query: -15
    all_fields: false
    fields:
      - group_description
      - group_location_name
      - group_title
      - node_description
      - node_title
      - profile_owner_name
    title: true
    alt: true
    tags:
      b: 2
      em: 1
      h1: 5
      h2: 3
      h3: 2
      strong: 2
      u: 1
  ignorecase:
    weights:
      preprocess_index: -20
      preprocess_query: -20
    all_fields: true
    fields:
      - group_creator_name
      - group_description
      - group_location_name
      - group_title
      - group_type
      - language_with_fallback
      - node_description
      - node_title
      - node_type
      - profile_expertise_name
      - profile_first_name
      - profile_interests_name
      - profile_last_name
      - profile_owner_name
      - profile_type
  language_with_fallback: {  }
  stopwords:
    weights:
      preprocess_index: -5
      preprocess_query: -2
    all_fields: false
    fields:
      - group_description
    stopwords:
      - a
      - an
      - and
      - are
      - as
      - at
      - be
      - but
      - by
      - for
      - if
      - in
      - into
      - is
      - it
      - 'no'
      - not
      - of
      - 'on'
      - or
      - s
      - such
      - t
      - that
      - the
      - their
      - then
      - there
      - these
      - they
      - this
      - to
      - was
      - will
      - with
  super_user:
    weights:
      preprocess_query: 30
  tokenizer:
    weights:
      preprocess_index: -6
      preprocess_query: -6
    all_fields: true
    fields:
      - group_description
      - group_title
      - node_description
      - node_title
      - node_type
      - profile_expertise_name
      - profile_first_name
      - profile_interests_name
      - profile_last_name
      - profile_owner_name
    spaces: ''
    ignored: ._-
    overlap_cjk: 1
    minimum_word_size: '3'
  transliteration:
    weights:
      preprocess_index: -20
      preprocess_query: -20
    all_fields: true
    fields:
      - group_creator_name
      - group_description
      - group_location_name
      - group_title
      - group_type
      - language_with_fallback
      - node_description
      - node_title
      - node_type
      - profile_expertise_name
      - profile_first_name
      - profile_interests_name
      - profile_last_name
      - profile_owner_name
      - profile_type
  verified_users:
    weights:
      preprocess_query: 30
tracker_settings:
  default:
    indexing_order: fifo
options:
  cron_limit: 50
  index_directly: false
  track_changes_in_references: true
server: social_database
