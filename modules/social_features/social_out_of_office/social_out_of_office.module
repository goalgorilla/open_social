<?php

/**
 * @file
 * Contains social_out_of_office.module..
 */

use Drupal\comment\CommentInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\profile\Entity\Profile;
use Drupal\social_post\Entity\PostInterface;

/**
 * @file
 * The Social Out of office module.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
function social_profile_extra_preprocess_profile__profile__statistic(array &$variables): void {
  $profile = $variables['profile'];

  $dates = social_out_of_office_get_ooo_dates($profile);

  if ($dates['start'] <= $dates['today'] && $dates['end'] >= $dates['today']) {
    $message = $profile->get('field_profile_message_ooo')->getValue();
    $message = $message[0]['value'];
    $variables['profile_ooo_status'] = t('Currently out of office');
    $variables['profile_message_ooo'] = $message;

    $alt_contact_person = $profile->get('field_profile_alt_contact')->referencedEntities()[0];
    if ($alt_contact_person) {
      $alt_contact_person_name = $alt_contact_person->getAccountName();
      $alt_contact_person_url = Url::fromRoute('social_user.stream', ['user' => $alt_contact_person->id()]);
      $variables['profile_alt_contact_person_name'] = $alt_contact_person_name;
      $variables['profile_alt_contact_person_url'] = $alt_contact_person_url;
    }
  }
}

/**
 * Implements hook_preprocess_user().
 *
 * Show status in private messaging thread
 * if someone is out of office.
 */
function social_out_of_office_preprocess_user(array &$variables): void {
  if ($variables['elements']['#view_mode'] == 'private_message_author') {
    $current_user = \Drupal::currentUser()->getAccount();
    $user = $variables['elements']['#user'];

    if ($current_user->id() !== $user->id()) {
      $profile_type = 'profile';
      /** @var \Drupal\profile\ProfileStorageInterface $profile_storage */
      $profile_storage = \Drupal::entityTypeManager()->getStorage('profile');
      /** @var \Drupal\profile\Entity\Profile $profile */
      $profile = $profile_storage->loadByUser($user, $profile_type);

      $dates = social_out_of_office_get_ooo_dates($profile);
      if ($dates['start'] <= $dates['today'] && $dates['end'] >= $dates['today']) {
        $suffix = $variables['content']['linked_username']['#suffix'];
        $suffix = '<span> ' . t('is out of office from') . ' ' . $dates['start'] . ' ' . t('to') . " " . $dates['end'] . " " . '</span>' . $suffix;
        $variables['content']['linked_username']['#suffix'] = $suffix;
      }
    }
  }
}

/**
 * Implements hook_entity_presave().
 *
 * Show message about users that out of office
 * if someone mentioned them in post or comment.
 */
function social_out_of_office_entity_presave(EntityInterface $entity): void {
  if ($entity instanceof PostInterface) {
    $body_value = $entity->get('field_post')->getValue();
  }
  elseif ($entity instanceof CommentInterface) {
    $body_value = $entity->get('field_comment_body')->getValue();
  }
  else {
    return;
  }
  $messages = [];
  $body_value = $body_value[0]['value'];
  $matches = NULL;
  preg_match_all('[~[0-9]]', $body_value, $matches);
  foreach ($matches[0] as $value) {
    $id = str_replace('~', '', $value);
    /** @var \Drupal\profile\ProfileStorageInterface $profile_storage */
    $profile_storage = \Drupal::entityTypeManager()->getStorage('profile');
    /** @var \Drupal\profile\Entity\Profile $profile */
    $profile = $profile_storage->load($id);

    $message = social_out_of_office_get_message_for_user_ooo($profile);
    if (!empty($message)) {
      $messages[] = $message;
    }
  }
  foreach ($messages as $message) {
    \Drupal::messenger()->addStatus(t('@name is out of office from @start_date to @end_date. @message', [
      '@name' => $message['name'],
      '@start_date' => $message['start_date'],
      '@end_date' => $message['end_date'],
      '@message' => $message['message'] ? '"' . $message['message'] . '"' : '',
    ]));
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_out_of_office_form_private_message_add_form_alter(array &$form, FormStateInterface $form_state, string $form_id): void {
  $form['actions']['submit']['#submit'][] = 'social_out_of_office_add_notice_about_users_ooo';
}

/**
 * Submit function for 'form_private_message_add' form.
 *
 * Check if any of members is out of office
 * and add status message if yes.
 */
function social_out_of_office_add_notice_about_users_ooo(array &$form, FormStateInterface $form_state): void {
  $messages = [];
  $members = $form_state->getValue('members');
  foreach ($members as $member) {
    foreach ($member as $member_id) {
      $user = \Drupal::entityTypeManager()->getStorage('user')->load($member_id);
      if (!$user) {
        return;
      }
      $profile_type = 'profile';
      /** @var \Drupal\profile\ProfileStorageInterface $profile_storage */
      $profile_storage = \Drupal::entityTypeManager()->getStorage('profile');
      /** @var \Drupal\profile\Entity\Profile $profile */
      $profile = $profile_storage->loadByUser($user, $profile_type);

      $message = social_out_of_office_get_message_for_user_ooo($profile);
      if (!empty($message)) {
        $messages[] = $message;
      }
    }
  }
  foreach ($messages as $message) {
    \Drupal::messenger()->addStatus(t('@name is out of office from @start_date to @end_date. @message', [
      '@name' => $message['name'],
      '@start_date' => $message['start_date'],
      '@end_date' => $message['end_date'],
      '@message' => $message['message'] ? '"' . $message['message'] . '"' : '',
    ]));
  }
}

/**
 * Function get from profile data from out of office fields.
 *
 * @param \Drupal\profile\Entity\Profile $profile
 *   Profile entity.
 *
 * @return array
 *   Data from profile OoO fields.
 */
function social_out_of_office_get_message_for_user_ooo(Profile $profile): array {
  $dates = social_out_of_office_get_ooo_dates($profile);
  if ($dates['start'] <= $dates['today'] && $dates['end'] >= $dates['today']) {
    $name = $profile->get('profile_name')->getString();
    $message = $profile->get('field_profile_message_ooo')->getValue();
    $message = $message[0]['value'];
    return [
      'name' => $name,
      'start_date' => $dates['start'],
      'end_date' => $dates['end'],
      'message' => $message,
    ];
  }
  return [];
}

/**
 * Function get from profile out of office dates.
 *
 * @param \Drupal\profile\Entity\Profile $profile
 *   Profile entity.
 *
 * @return array
 *   OoO dates.
 */
function social_out_of_office_get_ooo_dates(Profile $profile): array {
  $start_date_ooo = $profile->hasField('field_profile_start_date_ooo')
    ? $profile->get('field_profile_start_date_ooo')->getString() : NULL;
  $end_date_ooo = $profile->hasField('field_profile_end_date_ooo')
    ? $profile->get('field_profile_end_date_ooo')->getString() : NULL;
  $today = date('Y-m-d');
  return [
    'start' => $start_date_ooo,
    'end' => $end_date_ooo,
    'today' => $today,
  ];
}
