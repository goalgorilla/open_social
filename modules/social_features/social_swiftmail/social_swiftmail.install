<?php

/**
 * @file
 * Install and update hooks for Social Swiftmailer.
 */

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_swiftmail.
 */
function social_swiftmail_install() {
  $config_factory = \Drupal::configFactory();

  // Grant the default permissions for this feature.
  user_role_grant_permissions(
    'verified',
    [
      'use text format mail_html',
    ]
  );
  user_role_grant_permissions(
    'contentmanager',
    [
      'use text format mail_html',
    ]
  );
  user_role_grant_permissions(
    'sitemanager',
    [
      'use text format mail_html',
      'administer social swiftmail',
    ]
  );

  // Remove unnecessary mailer policies and set the correct theme to the default
  // policy.
  $keys = $config_factory->listAll('symfony_mailer.mailer_policy.');

  foreach ($keys as $key) {
    $config = $config_factory->getEditable($key);

    if ($key === 'symfony_mailer.mailer_policy._') {
      // Get our mailer_policy configuration.
      $configuration = $config->getOriginal('configuration');

      // Unset the old plugin and replace it with the new plugin.
      if (!empty($configuration) && isset($configuration['mailer_inline_css'])) {
        unset($configuration['mailer_inline_css']);
        $configuration['mailer_inline_css_social'] = [];
      }

      // Make sure we add our fallback text format option.
      $configuration['mail_html_text_format'] = [];
      $config->set('configuration', $configuration);
      $config->save();

      $config
        ->set('configuration.email_theme.theme', '_default')
        ->save();
    }
    else {
      $config->delete();
    }
  }
}

/**
 * Implements hook_update_last_removed().
 */
function social_swiftmail_update_last_removed() : int {
  return 11004;
}
