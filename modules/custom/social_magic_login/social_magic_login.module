<?php

/**
 * @file
 * The Social Magic Login module.
 */

use Drupal\user\UserInterface;

/**
 * Implements hook_token_info().
 */
function social_magic_login_token_info() {
  $info = [];

  // Magic login token.
  // @todo: Add :? as a filter to an entity type?
  $info['tokens']['user']['auto-login-token'] = [
    'name' => t('Automatic Login url'),
    'description' => t('This creates an url that logs in a user automatically and sends the user to a designated destination.'),
  ];

  return $info;
}

/**
 * Implements hook_tokens().
 */
function social_magic_login_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  $url_options = [];

  if ($type === 'user' && !empty($data['user']) && !empty($data['group'])) {
    /** @var \Drupal\user\UserInterface $user */
    $user = $data['user'];
    /** @var \Drupal\group\Entity\GroupInterface $group */
    $group = &$data['group'];

    foreach ($tokens as $token => $original) {
      switch ($token) {
        case 'auto-login-token':

          // Must be internal url.
          $group_url = $group->toUrl('canonical', [
            'absolute' => FALSE,
          ])->toString();
          if (!empty($group_url)) {
            $destination = $group_url;
          }

          $url = social_magic_login_url_create($user, $destination, $url_options);

          $replacements[$original] = $url->toString();

          break;
      }
    }
  }

  return $replacements;
}

/**
 * Wrapper method for Service MagicUrlCreate.
 *
 * @see \Drupal\social_magic_login\Service\MagicUrlCreate::create
 */
function social_magic_login_url_create(UserInterface $account, $destination, array $options) {
  $magic_url_service = \Drupal::service('social_magic_login.create_url');
  return $magic_url_service->create($account, $destination, $options);
}
