<?php

/**
 * @file
 * Installation code for the alternative_frontpage module.
 */

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of Alternative Frontpage.
 */
function alternative_frontpage_install(): void {
  // Set some default permissions for the site_manager and administrator.
  $permissions = [
    'administer alternative frontpage settings',
    'add alternative frontpage settings',
    'delete alternative frontpage settings',
    'edit alternative frontpage settings',
  ];

  user_role_grant_permissions('administrator', $permissions);
  user_role_grant_permissions('sitemanager', $permissions);

  alternative_frontpage_change_role_weight();
}

/**
 * Implements hook_update_last_removed().
 */
function alternative_frontpage_update_last_removed() : int {
  return 11102;
}

/**
 * Change contentmanager and sitemanager roles weight.
 *
 * We want to change the weight for these roles, since if the user has
 * multiple roles, e.g. sitemanager and any custom role, then we decided to
 * use the role with the highest weight to get an alternative front page for
 * this role, and it's logical that sitemanager and content manager should be
 * more powerful, then any custom role.
 *
 * @todo Remove this in https://www.drupal.org/project/social/issues/3412263.
 */
function alternative_frontpage_change_role_weight(): void {
  /** @var \Drupal\user\RoleStorageInterface $roles_storage */
  $roles_storage = \Drupal::entityTypeManager()->getStorage('user_role');

  /** @var \Drupal\user\Entity\Role $content_manager_role */
  $content_manager_role = $roles_storage->load('contentmanager');
  $content_manager_role->setWeight(100)->save();

  /** @var \Drupal\user\Entity\Role $site_manager_role */
  $site_manager_role = $roles_storage->load('sitemanager');
  $site_manager_role->setWeight(110)->save();
}
