# This file runs our script that helps us manage pull requests.
name: PR Manager

# This script runs on a lot of cases because it helps us automated labelling and
# other feedback based on the actions people take with
on:
  pull_request:
    types:
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - opened
      - edited
      - closed
      - reopened
      - synchronize
      - converted_to_draft
      - locked
      - unlocked
      - enqueued
      - dequeued
      - milestoned
      - demilestoned
      - ready_for_review
      - review_requested
      - review_request_removed
      - auto_merge_enabled
      - auto_merge_disabled

# We use the default concurrency grouping of allowing a single workflow per branch/PR/tag to run at the same time.
# In case of PRs we only care about the results for the last workflow run, so we cancel workflows already in progress
# when new code is pushed, in all other cases (branches/tags) we want to have a history for commits so it's easier to
# find breakages when they occur (head_ref is non-empty only when the workflow is triggered from a PR).
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.head_ref != '' }}

defaults:
  run:
    shell: bash

jobs:
  manage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
        working-directory: ./.github/prManager

      - uses: actions/github-script@v7
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/prManager/src/main.js')
            await script({github, context});
