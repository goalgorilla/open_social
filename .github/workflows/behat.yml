name: 'Behat'

# Controls when the workflow will run
on:
  # Triggers the workflow on all pull request events
  pull_request: { }
  # Trigger workflow for release branches.
  push:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"

# github.head_ref is only set when the workflow was triggered by a pull_request and it contains the value of the source branch of the PR.
# github.ref_name will than only be used if the workflow was not triggered by a pull_request and it also just contains the branch name.
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  feature_discovery:
    name: "Feature Discovery"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: sudo apt-get install jq

      - name: Find feature files
        id: set-matrix
        run: |
          echo -n "features=" >> $GITHUB_OUTPUT
          cd tests/behat/features/capabilities
          find * -type d -exec sh -c "ls {} | grep '\.feature$' > /dev/null" ';' -print | jq -R -s -c 'split("\n") | map(select(length > 0))' >> $GITHUB_OUTPUT

    outputs:
      features: ${{ steps.set-matrix.outputs.features }}

  install_open_social:
    name: "Install Open Social"
    runs-on: ubuntu-22.04
    container:
      image: goalgorilla/open_social_docker:ci
      volumes:
        - ${{ github.workspace }}:/var/www

    strategy:
      matrix:
        with_optional:
          - ""
          - "with-optional"

    services:
      db:
        image: mariadb:10.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: social
      mailcatcher:
        image: schickling/mailcatcher
        env:
          VIRTUAL_HOST: mailcatcher.social.dev
          VIRTUAL_PORT: 1080
        ports:
          - "1080"
      redis:
        image: redis:latest

    defaults:
      run:
        working-directory: /var/www

    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{ github.workspace }}/tmp

      # Checkout Drupal Social.
      - name: Prepare composer
        run: |
          cp tmp/tests/composer.json composer.json
          rm -r tmp

      # Install the version of Open Social under test.
      - name: Composer require current branch
        run: composer require goalgorilla/open_social:dev-$BRANCH_NAME

      - name: Install Open Social
        run: |
          set -e

          export OPTIONAL=""
          if [ "${{ matrix.with_optional }}" == "with-optional" ]; then
            export OPTIONAL="social_module_configure_form.select_all='TRUE'"
          fi

          drush site-install -y social --db-url=mysql://root:root@db:3306/social $OPTIONAL install_configure_form.update_status_module='array(FALSE,FALSE)' --site-name='Open Social';

          # Create swiftmailer-spool directory for behat tests
          if [ ! -d /var/www/html/profiles/contrib/social/tests/behat/features/swiftmailer-spool ]; then
            mkdir /var/www/html/profiles/contrib/social/tests/behat/features/swiftmailer-spool
          fi
          chown -R www-data:www-data /var/www/html/profiles/contrib/social/tests/behat/features/swiftmailer-spool
          chmod +w -R /var/www/html/profiles/contrib/social/tests/behat/features/swiftmailer-spool

          # Make sure swiftmailer is configured for our CI.
          drush cset -y swiftmailer.transport transport 'smtp'
          drush cset -y swiftmailer.transport smtp_host 'mailcatcher'
          drush cset -y swiftmailer.transport smtp_port 1025

      - name: Dump Database
        run: drush sql:dump --result-file=../installation.sql

      - name: Fix owner of web files
        run: chown -R www-data:www-data /var/www

      - name: Package up site
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}-test-setup${{ matrix.with_optional }}

  # This workflow contains a single job called "Running tests"
  tests:
    needs: [feature_discovery, install_open_social]

    name: 'Tests'
    runs-on: ubuntu-22.04
    container:
      image: goalgorilla/open_social_docker:ci
      volumes:
        - ${{ github.workspace }}:/var/www

    strategy:
      fail-fast: false
      matrix:
        feature: ${{ fromJson(needs.feature_discovery.outputs.features) }}
        with_optional:
          - ""
          - "with-optional"

    services:
      web:
        image: goalgorilla/open_social_docker:ci
        env:
          DRUPAL_SETTINGS: production
        volumes:
          - ${{ github.workspace }}:/var/www
        ports:
          - "80"
      db:
        image: mariadb:10.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: social
      mailcatcher:
        image: schickling/mailcatcher
        env:
          VIRTUAL_HOST: mailcatcher.social.dev
          VIRTUAL_PORT: 1080
        ports:
          - "1080"
      redis:
        image: redis:latest
      chrome:
        # We use an image based on zenika/alpine-chrome:latest so we can add
        # the start-up arguments that we need.
        image: kingdutch/social-docker-chrome
        ports:
          - '9222:9222'

    defaults:
      run:
        working-directory: /var/www

    steps:
      - name: Download Site
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}-test-setup${{ matrix.with_optional }}

      # We could run all tests at once by passing the folder directly to behat
      # however, by doing this manually in a loop we have the ability to ensure
      # each test runs against a clean database cheaply.
      - name: Run Integration test
        run: |
          vendor/bin/behat --version
          for test in html/profiles/contrib/social/tests/behat/features/capabilities/${{ matrix.feature }}/*.feature; do
            if head -n1 $test | grep -q "@disabled"; then
              echo "$test - Skipping disabled test"
            else
              echo "::group::$test"
              drush sql-drop -y
              drush sqlc < installation.sql
              vendor/bin/behat -vv --config html/profiles/contrib/social/tests/behat/behat.yml --strict --colors $test
              echo "::endgroup::"
            fi
          done

      - name: Upload Behat Test Output
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: behat-output-${{ matrix.feature }}${{ matrix.with_optional }}
          path: html/profiles/contrib/social/tests/behat/logs
